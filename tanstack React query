1- npm install @tanstack/react-query
2- npm install @tanstack/react-query @tanstack/react-query-devtools



en next
3- configuraos el _app.tsx 

import "@/styles/globals.css";
import type { AppProps } from "next/app";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { useState } from "react";

export default function App({ Component, pageProps }: AppProps) {

  const [queryClient] = useState(()=> new QueryClient());
  return(
    <QueryClientProvider client={queryClient}>
      <Component {...pageProps} />
    </QueryClientProvider>
  )
}






usamos el useQuery


import { Inter } from "next/font/google";
const inter = Inter({ subsets: ["latin"] });
import { useQuery } from "@tanstack/react-query";


const handleFetchData = async (): Promise<any>=>{
  try 
  {
    const response = await fetch("https://jsonplaceholder.typicode.com/users");

    if(!response.ok)
    {
      throw new Error("error")
    }

    return response.json()
    
  } catch (error) 
  {

    return error;
    
  }
}

interface IAddress{
  zipcode:string
}
interface IData {
  id:number,
  name:String,
  address : IAddress
}


const  Home = ()=> {
  const {data, error, isLoading} = useQuery<IData[]>({
    queryKey : ['data'], 
    queryFn : handleFetchData});


  if (isLoading) return <div>Loading...</div>;
  if (error) return <div>Error: {error?.message}</div>;

  data?.sort((a,b)=>{
    return b.id - a.id
  });

  return (
    <main className={`flex min-h-screen flex-col items-center justify-between p-24 ${inter.className}`}>
      {
        data?.map((d)=>{
          return(
            <div key={d.id}>
              {d.name}<br/>
              {d.address.zipcode}
            </div>
          )
        })
      }
    </main>
  );
}
export default Home;







