getServerSideProps
Propósito: Se usa para generar contenido en el servidor en cada solicitud.
Cuándo se Ejecuta: Se ejecuta en cada solicitud que se hace al servidor.
Es decir, cada vez que un usuario solicita la página, el contenido
se genera en el servidor antes de enviarlo al cliente.
Uso: Ideal para páginas que necesitan datos en tiempo real o que dependen
de la solicitud del usuario, como páginas personalizadas, datos que cambian
frecuentemente, o información que depende de la sesión del usuario.
Ventajas:
Siempre obtiene datos frescos y actualizados en cada solicitud.
Puede usar información específica del usuario o datos que cambian frecuentemente.
Desventajas:
Puede tener un rendimiento más bajo en comparación con getStaticProps debido a que el contenido se genera en cada solicitud.
Aumenta la carga en el servidor porque cada solicitud requiere que se genere una nueva página.



getStaticProps: Genera la página una vez durante la construcción. Ideal para contenido estático y que no cambia frecuentemente.
getServerSideProps: Genera la página en el servidor en cada solicitud. Ideal para contenido dinámico y dependiente de la solicitud.













import { GetServerSideProps } from 'next';

// Define una interfaz para el tipo de los usuarios
interface User {
  id: number;
  name: string;
  // Agrega otros campos si es necesario
}

interface ItemsProps {
  users: User[];
}

const Items = ({ users }: ItemsProps) => {
  return (
    <div>
      {
        users.length > 0 ? (
          <ul>
            {users.map((user) => (
              <li key={user.id}>{user.name}</li>
            ))}
          </ul>
        ) : (
          <p>No hay usuarios disponibles.</p>
        )
      }
    </div>
  );
};

export default Items;

export const getServerSideProps: GetServerSideProps<ItemsProps> = async () => {
  const response = await fetch("https://jsonplaceholder.typicode.com/users");
  const users: User[] = await response.json();

  return {
    props: { users }
  };
};
